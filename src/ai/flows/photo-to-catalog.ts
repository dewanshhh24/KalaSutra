'use server';

/**
 * @fileOverview AI flow for generating product attributes, price range, and captions from a product photo.
 *
 * - photoToCatalog - A function that handles the image analysis and content generation process.
 * - PhotoToCatalogInput - The input type for the photoToCatalog function.
 * - PhotoToCatalogOutput - The return type for the photoToCata_log function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PhotoToCatalogInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      'A photo of the product, as a data URI that must include a MIME type and use Base64 encoding. Expected format: \'data:<mimetype>;base64,<encoded_data>\'.' // Corrected typo here
    ),
});
export type PhotoToCatalogInput = z.infer<typeof PhotoToCatalogInputSchema>;

const PhotoToCatalogOutputSchema = z.object({
  attributes: z.array(z.string()).describe('Suggested attributes for the product.'),
  priceRange: z.string().describe('Suggested price range for the product.'),
  captions: z.array(z.string()).describe('Autogenerated captions for the product.'),
  hindiCaptions: z.array(z.string()).describe('Autogenerated captions for the product in Hindi.'),
});
export type PhotoToCatalogOutput = z.infer<typeof PhotoToCatalogOutputSchema>;

export async function photoToCatalog(input: PhotoToCatalogInput): Promise<PhotoToCatalogOutput> {
  return photoToCatalogFlow(input);
}

const prompt = ai.definePrompt({
  name: 'photoToCatalogPrompt',
  input: {schema: PhotoToCatalogInputSchema},
  output: {schema: PhotoToCatalogOutputSchema},
  prompt: `You are an AI assistant that helps artisans create product listings.

  Analyze the provided product photo and suggest relevant attributes, a reasonable price range, and engaging captions in both English and Hindi.
  The artisan will use these suggestions to quickly list their items for sale.

  Analyze the image in the following data URI: {{media url=photoDataUri}}.
`,
});

const photoToCatalogFlow = ai.defineFlow(
  {
    name: 'photoToCatalogFlow',
    inputSchema: PhotoToCatalogInputSchema,
    outputSchema: PhotoToCatalogOutputSchema,
  },
  async input => {
    const {output} = await ai.generate({
        model: 'googleai/gemini-1.5-flash-latest',
        prompt: `You are an AI assistant that helps artisans create product listings.
    
      Analyze the provided product photo and suggest relevant attributes, a reasonable price range, and engaging captions in both English and Hindi.
      The artisan will use these suggestions to quickly list their items for sale.
    
      Analyze this image: ${input.photoDataUri}.
    `,
        output: {
            schema: PhotoToCatalogOutputSchema,
        }
    });
    return output!;
  }
);
